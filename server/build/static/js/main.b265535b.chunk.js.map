{"version":3,"sources":["component/CreateUser/CreateUser.js","component/ChatBox/ChatBox.js","component/Home/Home.js","App.js","index.js"],"names":["CreateUser","props","useState","name","setName","disabledBtn","setDisabledBtn","className","value","onChange","e","target","length","disabled","namesake","onClick","click","ChatBox","content","setContent","disabledBtnSend","setDisabledBtnSend","useEffect","document","getElementById","scrollTop","scrollHeight","send","userArray","map","item","index","user","id","messArray","Fragment","style","textAlign","fontSize","mess","type","onKeyDown","event","key","Home","setNamesake","setUser","setUserArray","setMessArray","socketRef","useRef","current","io","transports","on","data","prev","JSON","stringify","emit","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b265535b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './style.css';\r\n\r\nexport default function CreateUser(props) {\r\n    const [name, setName] = useState(\"\");\r\n    const [disabledBtn, setDisabledBtn] = useState(true);    \r\n\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.target.value);\r\n        if (e.target.value.length >= 2 && e.target.value.length <=20) {\r\n            setDisabledBtn(false);\r\n        } else {\r\n            setDisabledBtn(true);\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        props.click(name);\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h2>Nhập tên của bạn</h2>\r\n            <input className=\"input-name\" value={name} onChange={handleChange}></input>\r\n            <div disabled={!disabledBtn}>\r\n                <span>Tên phải có từ 2 đến 20 kí tự </span>\r\n            </div>\r\n            <div disabled={props.namesake}>\r\n                <span>Tên này đã có người sử dụng</span>\r\n            </div>\r\n            <div className='btn-div-next'>\r\n                <button disabled={disabledBtn} className=\"btn-next\" onClick={handleClick}>NEXT</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport './style.css';\r\n\r\nexport default function ChatBox(props) {\r\n    const [content, setContent] = useState(\"\");\r\n    const [disabledBtnSend, setDisabledBtnSend] = useState(true);\r\n\r\n    const scrollDown = () => {\r\n        document.getElementById('scroll').scrollTop = document.getElementById('scroll').scrollHeight;\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollDown();\r\n    })\r\n\r\n    const handleChangeContent = (e) => {\r\n        setContent(e.target.value);\r\n    }\r\n\r\n    const keyDownEnter = (event) => {\r\n        if (content.length > 0) {\r\n            onClick();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (content.length > 0) {\r\n            setDisabledBtnSend(false);\r\n        } else {\r\n            setDisabledBtnSend(true);\r\n        }\r\n    }, [content]);\r\n\r\n\r\n    const onClick = () => {\r\n        setContent(\"\")\r\n        props.send(content);\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-box\">\r\n            <div className=\"user-online\">\r\n                <div className=\"title-user\">\r\n                    <span>Người đang online</span>\r\n                </div>\r\n                <div className=\"user\">\r\n                    {props.userArray.map((item, index) => {\r\n                        if (props.user.name === item.name) {\r\n                            return (<div key={index}></div>);\r\n                        }\r\n                        return (\r\n                            <div className=\"user-info\" key={index}>\r\n                                {item.name}\r\n                            </div>\r\n                        );\r\n\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-area\">\r\n                <div className=\"chat-title\">\r\n                    <div className=\"title-user\">\r\n                        <span>Room chat</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-box-area\" id=\"scroll\">\r\n                    {props.messArray.map((item, index) => {\r\n                        if (item.name === props.user.name) {\r\n                            return (\r\n                                <React.Fragment key={index} >\r\n                                    <div className=\"inbox-right\" >\r\n                                        <div style={{ textAlign: \"right\", fontSize: 10 }}>\r\n                                            Tôi\r\n                                        </div>\r\n                                        <div className=\"mess\">\r\n                                            {item.mess}\r\n                                        </div>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            );\r\n                        }\r\n                        return (\r\n                            <React.Fragment key={index} >\r\n                                <div className=\"inbox-left\" >\r\n                                    <div style={{ textAlign: \"left\", fontSize: 10 }}>\r\n                                        {item.name}\r\n                                    </div>\r\n                                    <div className=\"mess\">\r\n                                        {item.mess}\r\n                                    </div>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"inbox-input\">\r\n                    <input type=\"text\" className=\"input-inbox\"\r\n                        onKeyDown={(event) => (event.key === 'Enter' ? keyDownEnter(event) : null)}\r\n                        value={content} onChange={handleChangeContent} />\r\n                    <button className=\"btn-send\" disabled={disabledBtnSend}\r\n                        onClick={onClick}>send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport './style.css';\r\nimport CreateUser from \"../CreateUser/CreateUser\";\r\nimport ChatBox from \"../ChatBox/ChatBox\";\r\n\r\n\r\nexport default function Home() {\r\n    const [namesake, setNamesake] = useState(true);\r\n    const [user, setUser] = useState({});\r\n    const [userArray, setUserArray] = useState([]);\r\n    const [messArray,setMessArray] = useState([]);\r\n    const socketRef = useRef();\r\n\r\n\r\n    const handleClickNext = (name) => {\r\n        socketRef.current.emit('create-name', name);\r\n    }\r\n\r\n    const handleNamesake = () => {\r\n        setNamesake(false);\r\n    }\r\n\r\n    const handleClickSend = (data) => { \r\n        socketRef.current.emit(\"client-send-data\",{mess:data,name:user.name});\r\n    }\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io({ transports: ['websocket'], 'sync disconnect on unload': true });\r\n\r\n        socketRef.current.on('namesake', () => {\r\n            handleNamesake();\r\n        })\r\n\r\n        socketRef.current.on('successful-name-creation', (user, userArray) => {\r\n            setUser(user);\r\n\r\n        });\r\n\r\n        socketRef.current.on('server-send-data',(data) => {\r\n            setMessArray((prev) => {\r\n                return [...prev,data];\r\n            })\r\n        })\r\n\r\n        socketRef.current.on(\"user-online\", (data) => {\r\n            setUserArray(data);\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_chatBox\">\r\n                {JSON.stringify(user) === '{}' ?\r\n                    <CreateUser click={handleClickNext} namesake={namesake} />\r\n                    :\r\n                    <ChatBox userArray={userArray} user={user} send={handleClickSend} messArray={messArray}/>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import './App.css';\nimport Home from './component/Home/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}